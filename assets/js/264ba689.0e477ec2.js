"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7402],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),d=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=d(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=d(t),m=a,g=p["".concat(c,".").concat(m)]||p[m]||u[m]||l;return t?r.createElement(g,o(o({ref:n},s),{},{components:t})):r.createElement(g,o({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=p;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var d=2;d<l;d++)o[d]=t[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},9153:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return s},default:function(){return p}});var r=t(7462),a=t(3366),l=(t(7294),t(3905)),o=["components"],i={},c="@Guild",d={unversionedId:"decorators/general/guild",id:"decorators/general/guild",title:"@Guild",description:"You can use this guard to specify which guilds your @Slash commands are created by decorating the method with @Slash and @Guild",source:"@site/docs/decorators/general/guild.md",sourceDirName:"decorators/general",slug:"/decorators/general/guild",permalink:"/docs/decorators/general/guild",editUrl:"https://github.com/oceanroleplay/discord.ts/edit/main/docs/docs/decorators/general/guild.md",tags:[],version:"current",lastUpdatedBy:"oceanroleplay",lastUpdatedAt:1642097854,formattedLastUpdatedAt:"1/13/2022",frontMatter:{},sidebar:"docSidebar",previous:{title:"@Guard",permalink:"/docs/decorators/general/guard"},next:{title:"@On - Discord events",permalink:"/docs/decorators/general/on"}},s=[{value:"Guild at class level",id:"guild-at-class-level",children:[],level:2},{value:"Example - Dynamic guild resolver",id:"example---dynamic-guild-resolver",children:[],level:2},{value:"Signature",id:"signature",children:[],level:2},{value:"type: IGuild",id:"type-iguild",children:[],level:2},{value:"Make changes to",id:"make-changes-to",children:[],level:2}],u={toc:s};function p(e){var n=e.components,t=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"guild"},"@Guild"),(0,l.kt)("p",null,"You can use this guard to specify which guilds your @Slash commands are created by decorating the method with @Slash and @Guild"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\nabstract class AppDiscord {\n  @Slash("hello")\n  @Guild("GUILD_ID") // Only created on the guild GUILD_ID\n  private hello() {\n    // ...\n  }\n\n  @Slash("bye")\n  @Guild("GUILD_ID", "GUILD_ID2") // Only created on the guild GUILD_ID and GUILD_ID2\n  private bye() {\n    // ...\n  }\n}\n')),(0,l.kt)("h2",{id:"guild-at-class-level"},"Guild at class level"),(0,l.kt)("p",null,"You can set the guild IDs for all @Slash inside the class by decorating the class with @Guild"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\n@Guild("GUILD_ID", "GUILD_ID2")\nclass DiscordBot {\n  @Slash("hello") // Only created on the guild GUILD_ID and GUILD_ID2\n  private hello() {\n    // ...\n  }\n\n  @Slash("hello2") // Only created on the guild GUILD_ID and GUILD_ID2\n  private hello2() {\n    // ...\n  }\n}\n')),(0,l.kt)("h2",{id:"example---dynamic-guild-resolver"},"Example - Dynamic guild resolver"),(0,l.kt)("p",null,"To provide dynamic guild lists, use guild resolver."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"this._client = new Client({\n  botGuilds: [(client) => client.guilds.cache.map((guild) => guild.id)],\n});\n")),(0,l.kt)("h2",{id:"signature"},"Signature"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"@Guild(...guildIds: IGuild[])\n")),(0,l.kt)("h2",{id:"type-iguild"},"type: IGuild"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"IGuild",IGuild:!0},"type IGuild =\n  | Snowflake\n  | Snowflake[]\n  | ((\n      client: Client,\n      command:\n        | DApplicationCommand\n        | DComponentButton\n        | SimpleCommandMessage\n        | DComponentSelectMenu\n        | undefined\n    ) => Snowflake | Snowflake[] | Promise<Snowflake> | Promise<Snowflake[]>);\n")),(0,l.kt)("h2",{id:"make-changes-to"},"Make changes to"),(0,l.kt)("p",null,"It either extends or overwrites data configured in below decorators, however, the order of decorators matters."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/decorators/gui/buttoncomponent"},"@ButtonComponent")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/decorators/gui/selectmenucomponent"},"@SelectMenuComponent")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/decorators/general/discord"},"@Discord")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/decorators/commands/simplecommand"},"@SimpleCommand")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/decorators/commands/slash"},"@Slash")))}p.isMDXComponent=!0}}]);